name: Build and Deploy Docker

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때마다 실행됩니다.

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'

    - name: Cache Gradle dependencies
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle
      run: ./gradlew build

    - name: Build Docker image
      run: |
        # Docker 이미지를 빌드하고 태그를 지정합니다.
        docker build -t kimseonik/studyfy-app:${{ github.sha }} .

    - name: Log in to Docker Hub
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Push Docker image to Docker Hub
      run: |
        # 이미지를 Docker Hub에 푸시합니다.
        docker tag kimseonik/studyfy-app:${{ github.sha }} kimseonik/studyfy-app:latest
        docker push kimseonik/studyfy-app:${{ github.sha }}
        docker push kimseonik/studyfy-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to EC2
      run: |
        # EC2에 Docker 이미지를 배포하는 과정입니다.
        ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_SSH_KEY }} ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          docker pull kimseonik/studyfy-app:latest
          docker stop studyfy-app || true
          docker rm studyfy-app || true
          docker run -d -p 8080:8080 --name studyfy-app kimseonik/studyfy-app:latest
        EOF
