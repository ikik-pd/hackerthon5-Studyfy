name: Build and Deploy

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때마다 실행됩니다.

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'  # Temurin을 사용하여 JDK 설치
        architecture: x64

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle
      run: ./gradlew build

    - name: Build Docker image
      run: |
        docker build -t kimseonik/studyfy-app:${{ github.sha }} .

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image to Docker Hub
      run: |
        docker tag kimseonik/studyfy-app:${{ github.sha }} kimseonik/studyfy-app:latest
        docker push kimseonik/studyfy-app:${{ github.sha }}
        docker push kimseonik/studyfy-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa.pub
        chmod 600 ~/.ssh/id_rsa.pub
        ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts
        echo "Host ${{ secrets.EC2_PUBLIC_IP }}" >> ~/.ssh/config
        echo "  IdentityFile ~/.ssh/id_rsa.pub" >> ~/.ssh/config
        echo "  User ubuntu" >> ~/.ssh/config

    - name: Create .env from secret
      run: echo "${{ secrets.ENV_PRODUCTION }}" > .env

    - name: Copy docker-compose.yml and .env to EC2
      run: |
        scp -i ~/.ssh/studyfy-server.pem docker-compose.yml ubuntu@${{ secrets.EC2_PUBLIC_IP }}:/home/ubuntu/apps/server/
        scp -i ~/.ssh/studyfy-server.pem .env ubuntu@${{ secrets.EC2_PUBLIC_IP }}:/home/ubuntu/apps/server/

    - name: Deploy with Docker Compose
  ´    run: |
        ssh -i ~/.ssh/studyfy-server.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          docker pull kimseonik/studyfy-app:latest
          cd /home/ubuntu/apps/server
          docker compose --env-file .env down || true
          docker compose --env-file .env up -d
        EOF
