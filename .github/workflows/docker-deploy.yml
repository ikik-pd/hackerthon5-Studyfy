name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle
      run: ./gradlew build --no-daemon

    - name: Build Docker image
      run: docker build -t kimseonik/studyfy-app:${{ github.sha }} .

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image to Docker Hub
      run: |
        docker tag kimseonik/studyfy-app:${{ github.sha }} kimseonik/studyfy-app:latest
        docker push kimseonik/studyfy-app:${{ github.sha }}
        docker push kimseonik/studyfy-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to EC2
      run: |
        # SSH 키 설정
        mkdir -p ~/.ssh   # .ssh 디렉터리 생성
        echo -e "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/studyfy-server.pem
        chmod 600 ~/.ssh/studyfy-server.pem  # 적절한 권한 설정 (보안 상 필수)
        ls -la ~/.ssh/studyfy-server.pem  # 파일 권한 확인
        
        # EC2에 Docker 이미지를 배포하는 과정입니다.
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/studyfy-server.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          docker pull kimseonik/studyfy-app:latest
          docker stop studyfy-app || true
          docker rm studyfy-app || true
          docker run -d -p 8080:8080 --name studyfy-app kimseonik/studyfy-app:latest
        EOF
